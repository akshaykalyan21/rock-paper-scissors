{"ast":null,"code":"import React from'react';import'./Result.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Result=_ref=>{let{userChoice,computerChoice,result,isAnimating,choiceEmojis}=_ref;const getResultMessage=()=>{switch(result){case'win':return'üéâ You Win! üéâ';case'lose':return'üòî You Lose! üòî';case'draw':return'ü§ù It\\'s a Draw! ü§ù';default:return'Choose your weapon!';}};const getResultClass=()=>{switch(result){case'win':return'win';case'lose':return'lose';case'draw':return'draw';default:return'';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"result-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"choices-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"choice-display user-choice\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Your Choice\"}),/*#__PURE__*/_jsx(\"div\",{className:`choice-emoji-display ${userChoice?'show':''} ${isAnimating?'thinking':''}`,children:userChoice?choiceEmojis[userChoice]:'‚ùì'}),/*#__PURE__*/_jsx(\"p\",{children:userChoice?userChoice.charAt(0).toUpperCase()+userChoice.slice(1):'Waiting...'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"vs-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"vs-text\",children:\"VS\"}),isAnimating&&/*#__PURE__*/_jsxs(\"div\",{className:\"thinking-animation\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83E\\uDD14\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83E\\uDD14\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83E\\uDD14\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"choice-display computer-choice\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Computer's Choice\"}),/*#__PURE__*/_jsx(\"div\",{className:`choice-emoji-display ${computerChoice?'show':''} ${isAnimating?'thinking':''}`,children:computerChoice?choiceEmojis[computerChoice]:'‚ùì'}),/*#__PURE__*/_jsx(\"p\",{children:computerChoice?computerChoice.charAt(0).toUpperCase()+computerChoice.slice(1):'Waiting...'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`result-message ${getResultClass()}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:getResultMessage()}),result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-explanation\",children:[result==='win'&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Your \",userChoice,\" beats computer's \",computerChoice,\"!\"]}),result==='lose'&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Computer's \",computerChoice,\" beats your \",userChoice,\"!\"]}),result==='draw'&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Both chose \",userChoice,\" - it's a tie!\"]})]})]})]});};export default Result;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Result","_ref","userChoice","computerChoice","result","isAnimating","choiceEmojis","getResultMessage","getResultClass","className","children","charAt","toUpperCase","slice"],"sources":["C:/Users/ASUS/OneDrive/Desktop/rock-paper-scissor/src/components/Result.js"],"sourcesContent":["import React from 'react';\r\nimport './Result.css';\r\n\r\nconst Result = ({ userChoice, computerChoice, result, isAnimating, choiceEmojis }) => {\r\n  const getResultMessage = () => {\r\n    switch (result) {\r\n      case 'win':\r\n        return 'üéâ You Win! üéâ';\r\n      case 'lose':\r\n        return 'üòî You Lose! üòî';\r\n      case 'draw':\r\n        return 'ü§ù It\\'s a Draw! ü§ù';\r\n      default:\r\n        return 'Choose your weapon!';\r\n    }\r\n  };\r\n\r\n  const getResultClass = () => {\r\n    switch (result) {\r\n      case 'win':\r\n        return 'win';\r\n      case 'lose':\r\n        return 'lose';\r\n      case 'draw':\r\n        return 'draw';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"result-container\">\r\n      <div className=\"choices-display\">\r\n        <div className=\"choice-display user-choice\">\r\n          <h4>Your Choice</h4>\r\n          <div className={`choice-emoji-display ${userChoice ? 'show' : ''} ${isAnimating ? 'thinking' : ''}`}>\r\n            {userChoice ? choiceEmojis[userChoice] : '‚ùì'}\r\n          </div>\r\n          <p>{userChoice ? userChoice.charAt(0).toUpperCase() + userChoice.slice(1) : 'Waiting...'}</p>\r\n        </div>\r\n\r\n        <div className=\"vs-display\">\r\n          <span className=\"vs-text\">VS</span>\r\n          {isAnimating && (\r\n            <div className=\"thinking-animation\">\r\n              <span>ü§î</span>\r\n              <span>ü§î</span>\r\n              <span>ü§î</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"choice-display computer-choice\">\r\n          <h4>Computer's Choice</h4>\r\n          <div className={`choice-emoji-display ${computerChoice ? 'show' : ''} ${isAnimating ? 'thinking' : ''}`}>\r\n            {computerChoice ? choiceEmojis[computerChoice] : '‚ùì'}\r\n          </div>\r\n          <p>{computerChoice ? computerChoice.charAt(0).toUpperCase() + computerChoice.slice(1) : 'Waiting...'}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`result-message ${getResultClass()}`}>\r\n        <h3>{getResultMessage()}</h3>\r\n        {result && (\r\n          <div className=\"result-explanation\">\r\n            {result === 'win' && (\r\n              <p>Your {userChoice} beats computer's {computerChoice}!</p>\r\n            )}\r\n            {result === 'lose' && (\r\n              <p>Computer's {computerChoice} beats your {userChoice}!</p>\r\n            )}\r\n            {result === 'draw' && (\r\n              <p>Both chose {userChoice} - it's a tie!</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}