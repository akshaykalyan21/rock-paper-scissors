{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\rock-paper-scissor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Game from './components/Game';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const toggleTheme = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${isDarkTheme ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83E\\uDEA8 \\u2702\\uFE0F \\uD83D\\uDCC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rock Paper Scissors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        \"aria-label\": \"Toggle theme\",\n        children: isDarkTheme ? '‚òÄÔ∏è' : 'üåô'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QGJnqREoMLSoGgc2oLan62N+pAI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Game","jsxDEV","_jsxDEV","App","_s","isDarkTheme","setIsDarkTheme","toggleTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/rock-paper-scissor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Game from './components/Game';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkTheme(!isDarkTheme);\r\n  };\r\n\r\n  return (\r\n    <div className={`app ${isDarkTheme ? 'dark' : 'light'}`}>\r\n      <div className=\"header\">\r\n        <h1>ü™® ‚úÇÔ∏è üìÑ</h1>\r\n        <h2>Rock Paper Scissors</h2>\r\n        <button \r\n          className=\"theme-toggle\"\r\n          onClick={toggleTheme}\r\n          aria-label=\"Toggle theme\"\r\n        >\r\n          {isDarkTheme ? '‚òÄÔ∏è' : 'üåô'}\r\n        </button>\r\n      </div>\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAE,OAAOH,WAAW,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAI,QAAA,gBACtDP,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBP,OAAA;QAAAO,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBX,OAAA;QAAAO,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BX,OAAA;QACEM,SAAS,EAAC,cAAc;QACxBM,OAAO,EAAEP,WAAY;QACrB,cAAW,cAAc;QAAAE,QAAA,EAExBJ,WAAW,GAAG,IAAI,GAAG;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNX,OAAA,CAACF,IAAI;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACT,EAAA,CAvBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}